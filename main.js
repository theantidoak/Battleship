"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkbattleship"] = self["webpackChunkbattleship"] || []).push([["main"],{

/***/ "./src/styles.css":
/*!************************!*\
  !*** ./src/styles.css ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://battleship/./src/styles.css?");

/***/ }),

/***/ "./src/DOM/domBoard.js":
/*!*****************************!*\
  !*** ./src/DOM/domBoard.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bindStartButtons: () => (/* binding */ bindStartButtons),\n/* harmony export */   gameStart: () => (/* binding */ gameStart)\n/* harmony export */ });\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../game */ \"./src/game.js\");\n/* harmony import */ var _dragAndDrop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dragAndDrop */ \"./src/DOM/dragAndDrop.js\");\n/* harmony import */ var _domEvents__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./domEvents */ \"./src/DOM/domEvents.js\");\n\n\n\n\nfunction bindSetPiecesBtns(game) {\n  const setPiecesBtn = document.querySelector('.set-direction');\n  setPiecesBtn.addEventListener('click', () => {\n    game.player1.board.isVertical = !game.player1.board.isVertical;\n    game.player2.board.isVertical = !game.player2.board.isVertical;\n    const ships = document.querySelectorAll('.docked');\n    ships.forEach((ship) => {\n      ship.style.display = ship.style.display === \"none\" ? \"none\" : ship.style.display === 'flex' ? 'grid' : 'flex';\n    })\n  });\n}\n\nfunction bindStartButtons() {\n  const onePlayerBtn = document.getElementById(\"one-player\");\n  const twoPlayerBtn = document.getElementById(\"two-player\");\n  const startGameBtn = document.querySelector('.start-game');\n  const shipsContainer = document.querySelector('.ships');\n\n  onePlayerBtn.addEventListener('click', (e) => {\n    const game = gameStart(false);\n    e.currentTarget.parentElement.parentElement.style.display = \"none\";\n    shipsContainer.style.display = \"flex\";\n\n    bindSetPiecesBtns(game);\n  })\n  \n  twoPlayerBtn.addEventListener('click', (e) => {\n    const game = gameStart(true);\n    e.currentTarget.parentElement.parentElement.style.display = \"none\";\n    shipsContainer.style.display = \"flex\";\n\n    bindSetPiecesBtns(game);\n  })\n\n  startGameBtn.addEventListener('click', (e) => {\n    e.currentTarget.parentElement.style.display = \"none\";\n  });\n\n  const scorecardBtn = document.querySelector('#scorecard-btn');\n  scorecardBtn.addEventListener('click', () => {\n    const scorecard = document.querySelector('.scorecard');\n    scorecard.classList.toggle('open');\n  })\n}\n\nfunction makeShipSquares(ship, num) {\n  for (let j = 0; j < num; j++) {\n    const square = document.createElement('div');\n    ship.appendChild(square);\n  }\n}\n\nfunction makeShips(player) {\n  const shipContainer = document.querySelector('.ships');\n  const shipNames = ['carrier', 'battleship', 'cruiser', 'submarine', 'destroyer'].reverse();\n\n  for (let i = shipNames.length - 1; i >= 0; i--) {\n    const ship = document.createElement('div');\n    ship.classList.add('ship');\n    ship.classList.add(`${shipNames[i]}`);\n    ship.classList.add('docked');\n    ship.id = player.name + '-' + shipNames[i];\n    ship.draggable = true;\n    ship.addEventListener('dragstart', (e) => _dragAndDrop__WEBPACK_IMPORTED_MODULE_1__.dragstart_handler.call(player, e));\n    if (i === 4) {\n      makeShipSquares(ship, 5)\n    } else if (i === 3) {\n      makeShipSquares(ship, 4)\n    } else if (i === 0) {\n      makeShipSquares(ship, 2)\n    } else {\n      makeShipSquares(ship, 3)\n    }\n\n    if (!player.isAI && player.name === \"P2\") {\n      ship.classList.add(`${player.name}`);\n      ship.style.display = \"none\";\n    }\n\n    shipContainer.appendChild(ship);\n  }\n}\n\nfunction makeGridSquares(player, boardTemplate, game) {\n  player.board.emptyCoords.forEach((coord) => {\n    const square = document.createElement('div');\n    square.classList.add('battleship-square');\n    square.id = player.name + '-' + coord;\n    square.addEventListener('click', (e) => _domEvents__WEBPACK_IMPORTED_MODULE_2__.handleMove.call(game, e));\n    boardTemplate.appendChild(square);\n  })\n  return boardTemplate;\n}\n\n\nfunction makeGrids(game, player, ai) {\n  const boardContainer = document.querySelector('.boards');\n  const boardTemplate = document.createElement('div');\n  boardTemplate.id = player.name;\n  boardTemplate.classList.add('battleship-board');\n  const playerBoard = makeGridSquares(player, boardTemplate, game);\n\n  if (ai) {\n    game.player2.makeAISetPieces();\n  } else {\n    [...playerBoard.children].forEach((square) => {\n      square.addEventListener('dragover', _dragAndDrop__WEBPACK_IMPORTED_MODULE_1__.dragover_handler);\n      square.addEventListener('drop', (e) => _dragAndDrop__WEBPACK_IMPORTED_MODULE_1__.drop_handler.call(player, e));\n    })\n    makeShips(player);\n  }\n  \n  \n  boardContainer.appendChild(playerBoard);\n}\n\nfunction gameStart(ai) {\n  const game = new _game__WEBPACK_IMPORTED_MODULE_0__.Game(!ai)\n  makeGrids(game, game.player1, false);\n  makeGrids(game, game.player2, !ai);\n  return game;\n}\n\n//# sourceURL=webpack://battleship/./src/DOM/domBoard.js?");

/***/ }),

/***/ "./src/DOM/domEvents.js":
/*!******************************!*\
  !*** ./src/DOM/domEvents.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appendShipToGrid: () => (/* binding */ appendShipToGrid),\n/* harmony export */   handleMove: () => (/* binding */ handleMove)\n/* harmony export */ });\n/* harmony import */ var _shortcodes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shortcodes */ \"./src/shortcodes.js\");\n\n\nfunction appendShipToGrid(draggable, target, player) {\n  draggable.classList.remove('docked');\n  target.appendChild(draggable);\n  player.pieces.push(draggable.id.slice(3));\n  player.board.placeShip(draggable.children.length, target.id.slice(3).split(',').map(Number));\n}\n\nfunction changeBackgroundColor(square, hit) {\n  square.style.backgroundColor = hit ? 'red' : 'blue';\n  if (square.firstElementChild && square.firstElementChild.firstElementChild) {\n    square.firstElementChild.firstElementChild.style.backgroundColor = hit ? 'red' : 'blue';\n  }\n}\n\nfunction highlightCurrentBoard() {\n  const p1Board = document.querySelector(`#${this.player1.name}`);\n  const p2Board = document.querySelector(`#${this.player2.name}`);\n\n  p1Board.classList.toggle('highlighted-board');\n  p2Board.classList.toggle('highlighted-board');\n}\n\nfunction updateScorecard() {\n  const p1Scorecard = document.querySelector('.scorecard-P1');\n  const p2Scorecard = document.querySelector('.scorecard-P2');\n  \n  const p1turn = p1Scorecard.querySelector('.turn');\n  const p1sunkShips = p1Scorecard.querySelector('.sunk-ships');\n  const p1floatingShips = p1Scorecard.querySelector('.floating-ships');\n  const p1hits = p1Scorecard.querySelector('.total-hits');\n  const p1misses = p1Scorecard.querySelector('.total-misses');\n\n  const p2turn = p2Scorecard.querySelector('.turn');\n  const p2sunkShips = p2Scorecard.querySelector('.sunk-ships');\n  const p2floatingShips = p2Scorecard.querySelector('.floating-ships');\n  const p2hits = p2Scorecard.querySelector('.total-hits');\n  const p2misses = p2Scorecard.querySelector('.total-misses');\n\n  p1turn.textContent = this.player1.turn ? 'Yes' : 'No';\n  p1sunkShips.textContent = this.player1.sunkShips.length;\n  p1floatingShips.textContent = 5 - this.player1.sunkShips.length;\n  p1hits.textContent = this.player1.hits.length;\n  p1misses.textContent = this.player1.misses.length;\n\n  p2turn.textContent = this.player2.turn ? 'Yes' : 'No';\n  p2sunkShips.textContent = this.player2.sunkShips.length;\n  p2floatingShips.textContent = 5 - this.player2.sunkShips.length;\n  p2hits.textContent = this.player2.hits.length;\n  p2misses.textContent = this.player2.misses.length;\n}\n\nfunction gameOverScreen(message) {\n  const boards = document.querySelector(\".boards\");\n  const boardsWithoutEvents = boards.cloneNode(true);\n  boards.replaceWith(boardsWithoutEvents);\n  const container = document.createElement('div');\n  container.classList.add('game-over-container');\n  const textElement = document.createElement('p');\n  textElement.classList.add('game-over-message');\n  textElement.appendChild(document.createTextNode(message));\n  const button = document.createElement('button');\n  container.appendChild(textElement);\n  button.appendChild(document.createTextNode(\"Start Over?\"))\n  button.addEventListener('click', () => {\n    location.reload();\n  })\n  container.appendChild(button);\n  document.body.appendChild(container);\n}\n\nfunction handleMove(e) {\n  e.stopPropagation();\n  console.log(this);\n  this.updateShipsReady();\n  \n  const attacker = !this.player1.turn ? this.player2 : this.player1;\n  const defender = !this.player1.turn ? this.player1 : this.player2;\n  const coords = attacker.isAI ? attacker.getAICoords() : e.currentTarget.id.slice(3).split(',').map(Number);\n  const inValidCoords = (0,_shortcodes__WEBPACK_IMPORTED_MODULE_0__.existsInArray)(attacker.moves, coords);\n  const square = document.getElementById(`${defender.name + '-' + coords}`);\n  if (inValidCoords || !this.shipsReady || defender.turn || (!attacker.isAI && e.currentTarget.id.slice(0, 2) !== defender.name)) return;\n  \n  attacker.attackEnemy(coords);\n  const hit = (0,_shortcodes__WEBPACK_IMPORTED_MODULE_0__.existsInArray)(defender.board.occupiedCoords, coords);\n  defender.board.receiveAttack(coords, hit);\n  attacker.recordMove(coords, hit);\n  changeBackgroundColor(square, hit);\n  defender.changeTurn();\n  attacker.changeTurn();\n\n  highlightCurrentBoard.call(this);\n\n  this.checkSunkShips();\n  updateScorecard.call(this);\n  const gameOver = this.checkGameOver();\n\n  if (gameOver !== \"Game on\") {\n    gameOverScreen(gameOver);\n  }\n\n  if (defender.isAI) {\n    handleMove.call(this, e);\n  }\n\n  return;\n}\n\n\n\n//# sourceURL=webpack://battleship/./src/DOM/domEvents.js?");

/***/ }),

/***/ "./src/DOM/dragAndDrop.js":
/*!********************************!*\
  !*** ./src/DOM/dragAndDrop.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dragover_handler: () => (/* binding */ dragover_handler),\n/* harmony export */   dragstart_handler: () => (/* binding */ dragstart_handler),\n/* harmony export */   drop_handler: () => (/* binding */ drop_handler)\n/* harmony export */ });\n/* harmony import */ var _shortcodes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shortcodes */ \"./src/shortcodes.js\");\n/* harmony import */ var _domEvents__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./domEvents */ \"./src/DOM/domEvents.js\");\n\n\n\nfunction dragstart_handler(e) {\n  e.dataTransfer.setData(\"text/plain\", e.target.id);\n  e.dataTransfer.effectAllowed = \"move\";\n  const dock = document.querySelector(\".ships\");\n  dock.style.opacity = .25;\n  const boards = document.querySelectorAll('.battleship-board');\n  boards.forEach((board) => {\n    if (board.id !== this.name) {\n      board.style.visibility = \"hidden\";\n    }\n  })\n}\n\nfunction dragover_handler(e) {\n  e.stopPropagation();\n  e.preventDefault();\n  e.dataTransfer.dropEffect = \"move\";\n}\n\nfunction drop_handler(e) {\n  e.stopPropagation();\n  e.preventDefault();\n  const data = e.dataTransfer.getData(\"text/plain\");\n  const target = e.target;\n  const coords = target.id.slice(3).split(',').map(Number);\n  const draggable = document.getElementById(data);\n  const dock = document.querySelector(\".ships\");\n  const p2Board = document.querySelector('#P2');\n  const p1Board = document.querySelector('#P1');\n  dock.style.opacity = 1;\n  const boards = document.querySelectorAll('.battleship-board');\n  boards.forEach((board) => {\n    if (board.id !== this.name) {\n      board.style.visibility = \"visible\";\n    }\n  })\n  if (!draggable.children) return;\n\n  const validDrop = (0,_shortcodes__WEBPACK_IMPORTED_MODULE_0__.isValidDrop)(this, draggable.children.length, coords);\n\n  if (validDrop) {\n    if (draggable.parentElement.id.slice(3) !== \"\") {\n      this.pieces.splice(this.pieces.indexOf(draggable.id.slice(3)), 1);\n      this.board.removeShip(draggable.parentElement.id.slice(3).split(',').map((val) => +val), draggable.children.length);\n    }\n\n    (0,_domEvents__WEBPACK_IMPORTED_MODULE_1__.appendShipToGrid)(draggable, target, this);\n\n    if (dock.children.length === 7) {\n      const hiddenShips = dock.querySelectorAll(\".P2\");\n      const p1Ships = p1Board.querySelectorAll(\".ship\");\n      const shipsTitle = document.querySelector('.ships-title');\n      p1Ships.forEach((ship) => {\n        [...ship.children].forEach((square) => {\n          square.style.backgroundColor = \"transparent\"\n        })\n      });\n      hiddenShips.forEach((ship) => ship.style.display = \"grid\");\n      shipsTitle.textContent = \"Player 2\";\n      p2Board.scrollIntoView();\n    } else if (dock.children.length === 2) {\n      dock.style.display = \"none\";\n      const p2Ships = p2Board.querySelectorAll(\".ship\");\n      p2Ships.forEach((ship) => {\n        [...ship.children].forEach((square) => {\n          square.style.backgroundColor = \"transparent\"\n        })\n      });\n      const startGame = document.querySelector('.start-game-container');\n      startGame.style.display = \"block\";\n      p2Board.classList.add('highlighted-board');\n      startGame.scrollIntoView();\n    }\n\n    setTimeout(function () {\n      const startGameBtnContainer = document.querySelector('.start-game-container');\n      startGameBtnContainer.style.display = \"none\";\n    }, 5000)\n  }\n}\n\n//# sourceURL=webpack://battleship/./src/DOM/dragAndDrop.js?");

/***/ }),

/***/ "./src/board.js":
/*!**********************!*\
  !*** ./src/board.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   board: () => (/* binding */ board)\n/* harmony export */ });\n/* harmony import */ var _ship__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ship */ \"./src/ship.js\");\n/* harmony import */ var _shortcodes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shortcodes */ \"./src/shortcodes.js\");\n\n\n\nclass board {\n  constructor(name) {\n    this.emptyCoords = this._populateEmpty();\n    this.name = name;\n    this.occupiedCoords = [];\n    this.gridHits = [];\n    this.gridMisses = [];\n    this.isVertical = true;\n    this.fleet = {\n      carrier: null,\n      battleship: null,\n      cruiser: null,\n      submarine: null,\n      destroyer: null\n    }\n    this.lost = false;\n  }\n\n  _populateEmpty() {\n    let coords = [];\n\n    for (let i = 9; i >= 0; i--) {\n      for (let j = 0; j < 10; j++) {\n        coords.push([j, i]);\n      }\n    }\n\n    return coords;\n  }\n\n  changeDirection() {\n    this.isVertical = !this.isVertical;\n  }\n\n  _getShipCoords(length, firstCoords, shipCoords=[]) {\n    if (!(0,_shortcodes__WEBPACK_IMPORTED_MODULE_1__.isValidSquare)(this.emptyCoords, firstCoords)) {\n      return false;\n    } \n\n    shipCoords.push(firstCoords);\n\n    if (length === 1) {\n      return shipCoords;\n    }\n\n    return this.isVertical \n      ? this._getShipCoords(length - 1, [firstCoords[0], firstCoords[1] - 1], shipCoords) \n      : this._getShipCoords(length - 1, [firstCoords[0] + 1, firstCoords[1]], shipCoords);\n  }\n\n  _getShipName(length) {\n    if (length === 5) {\n      return \"carrier\";\n    }\n    if (length === 4) {\n      return \"battleship\";\n    }\n    if (length === 3 && !this.fleet.cruiser) {\n      return \"cruiser\";\n    }\n    if (length === 3) {\n      return \"submarine\";\n    }\n    if (length === 2) {\n      return \"destroyer\";\n    }\n  }\n\n  _addToOccupied(newCoords) {\n    this.occupiedCoords.push(...newCoords);\n  }\n\n  _removeFromEmpty(newCoords) {\n    this.emptyCoords = this.emptyCoords.filter((coords) => !newCoords.find((coord) => coord[0] === coords[0] && coord[1] === coords[1]))\n  }\n\n  placeShip(length, firstCoords) {\n    const shipCoords = this._getShipCoords(length, firstCoords);\n    if (!shipCoords) {\n      return false;\n    }\n\n    this.fleet[this._getShipName(length)] = {\n      coords: shipCoords,\n      ship: new _ship__WEBPACK_IMPORTED_MODULE_0__.Ship(length)\n    };\n    this._addToOccupied(shipCoords);\n    this._removeFromEmpty(shipCoords);\n  }\n\n  removeShip(coords, length) {\n    const index = this.occupiedCoords.findIndex((arr) => arr.indexOf(coords) !== -1);\n    const replaceCoords = this.occupiedCoords.splice(index + 1, index + length + 1);\n    this.emptyCoords.push(...replaceCoords);\n  }\n\n  _recordSunkShip(target) {\n    if (this.fleet[target].ship.length === this.fleet[target].ship.hits) {\n      this.fleet[target].ship.isSunk();\n    }\n  }\n\n  _recordHit(newCoords) {\n    const ships = Object.keys(this.fleet);\n    ships.forEach((target) => {\n      const targetHit = this.fleet[target] \n        ? (0,_shortcodes__WEBPACK_IMPORTED_MODULE_1__.existsInArray)(this.fleet[target].coords, newCoords) \n        : null;\n      if (targetHit) {\n        this.fleet[target].ship.addHit();\n        this._recordSunkShip(target);\n      }\n    })\n  }\n\n  receiveAttack(newCoords, hit) {\n    if (hit) {\n      this.gridHits.push(newCoords);\n      this._recordHit(newCoords);\n    } else {\n      this.gridMisses.push(newCoords);\n    }\n  }\n}\n\n\n\n//# sourceURL=webpack://battleship/./src/board.js?");

/***/ }),

/***/ "./src/game.js":
/*!*********************!*\
  !*** ./src/game.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Game: () => (/* binding */ Game)\n/* harmony export */ });\n/* harmony import */ var _person__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./person */ \"./src/person.js\");\n\n\nclass Game {\n  constructor(ai) {\n    this.player1 = new _person__WEBPACK_IMPORTED_MODULE_0__.Player('P1', true, false);\n    this.player2 = new _person__WEBPACK_IMPORTED_MODULE_0__.Player('P2', false, ai);\n    this.shipsReady = false;\n    this.p1SunkShips = [];\n    this.p2SunkShips = [];\n  }\n\n  updateShipsReady() {\n    this.shipsReady = this.player1.pieces.length + this.player2.pieces.length === 10 ? true : false;\n  }\n\n  checkSunkShips() {\n    const p1Ships = Object.entries(this.player1.board.fleet);\n    const p2Ships = Object.entries(this.player2.board.fleet);\n\n    p1Ships.forEach(([key, value]) => {\n      if (value.ship.sunk && !this.p1SunkShips.includes(key)) {\n        this.p1SunkShips.push(key)\n        this.player2.sunkShips.push(key);\n      }\n    })\n\n    p2Ships.forEach(([key, value]) => {\n      if (value.ship.sunk && !this.p2SunkShips.includes(key)) {\n        this.p2SunkShips.push(key)\n        this.player1.sunkShips.push(key);\n      }\n    })\n  }\n\n  checkGameOver() {\n    if (this.p1SunkShips.length === 5 || this.p2SunkShips.length === 5) { \n      this.p1SunkShips.length === 5 ? this.player1.board.lost = true : this.player2.board.lost = true;\n      const winner = this.player1.board.lost === true ? \"Player 2\" : \"Player 1\"\n      return \"Game Over: \" + winner + \" wins\";\n    }\n    return \"Game on\"\n  }\n}\n\n//# sourceURL=webpack://battleship/./src/game.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _DOM_domBoard__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DOM/domBoard */ \"./src/DOM/domBoard.js\");\n/* harmony import */ var _styles_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./styles.css */ \"./src/styles.css\");\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", _DOM_domBoard__WEBPACK_IMPORTED_MODULE_0__.bindStartButtons);\n\n//# sourceURL=webpack://battleship/./src/index.js?");

/***/ }),

/***/ "./src/person.js":
/*!***********************!*\
  !*** ./src/person.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Player: () => (/* binding */ Player)\n/* harmony export */ });\n/* harmony import */ var _board__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board */ \"./src/board.js\");\n/* harmony import */ var _shortcodes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shortcodes */ \"./src/shortcodes.js\");\n\n\n\nclass Player {\n  constructor(name, turn, isAI) {\n    this.name = name;\n    this.turn = turn;\n    this.moves = [];\n    this.hits = [];\n    this.misses = [];\n    this.board = new _board__WEBPACK_IMPORTED_MODULE_0__.board(name);\n    this.pieces = [];\n    this.sunkShips = [];\n    this.isAI = isAI;\n  }\n\n  changeTurn() {\n    this.turn = !this.turn;\n  }\n\n  attackEnemy(coords) {\n    this.moves.push(coords);\n  }\n\n  recordMove(coords, hit) {\n    hit ? this.hits.push(coords) : this.misses.push(coords);\n  }\n\n  // AI Move\n\n  _findAdjacent(coords) {\n    let adjCoords = [];\n    const options = [[1, 0], [-1, 0], [0, 1], [0, -1]];\n    for (let i = 0; i < options.length; i++) {\n      const x = coords[0] + options[i][0];\n      const y = coords[1] + options[i][1];\n      const exists = (0,_shortcodes__WEBPACK_IMPORTED_MODULE_1__.existsInArray)(this.moves, [x, y]);\n      if ((0,_shortcodes__WEBPACK_IMPORTED_MODULE_1__.isValidAxis)(x) && (0,_shortcodes__WEBPACK_IMPORTED_MODULE_1__.isValidAxis)(y) && !exists) {\n        adjCoords.push([x, y]);\n      }\n    }\n\n    return adjCoords;\n  }\n\n  _getPreciseHit() {\n    let adjCoords = [];\n\n    for (let i = 0; i < this.hits.length; i++) {\n      const hit = this.hits[i];\n      adjCoords.push(...this._findAdjacent(hit));\n    }\n\n    return adjCoords;\n  }\n\n  getAICoords() {\n    const prevHit = this.hits.length > 0 ? true : false;\n    const adjCoords = prevHit ? this._getPreciseHit() : [];\n    const randomNumber = Math.floor(Math.random() * adjCoords.length);\n    const move = adjCoords.length > 0\n      ? adjCoords[randomNumber]\n      : [Math.floor(Math.random() * 10), Math.floor(Math.random() * 10)];\n    const exists = (0,_shortcodes__WEBPACK_IMPORTED_MODULE_1__.existsInArray)(this.moves, move);\n    if (exists) {\n      return this.getAICoords();\n    }\n\n    return move;\n  }\n\n  // AI Ship Placement\n\n  _getValidCoords(shipLength) {\n    const randomIndex = Math.floor(Math.random() * this.board.emptyCoords.length);\n    const coords = this.board.emptyCoords[randomIndex];\n    const validDrop = (0,_shortcodes__WEBPACK_IMPORTED_MODULE_1__.isValidDrop)(this, shipLength, coords);\n    if (!validDrop) {\n      return this._getValidCoords(shipLength);\n    }\n\n    return coords;\n  }\n\n  makeAISetPieces() {\n    const ships  = [2, 3, 3, 4, 5];\n\n    for (let i = 0; i < ships.length; i++) {\n      Math.floor(Math.random() * 2) == 1 ? this.board.changeDirection() : null;\n      const coords = this._getValidCoords(ships[i]);\n      this.pieces.push(this.board._getShipName(ships[i]));\n      this.board.placeShip(ships[i], coords);\n    }\n  }\n}\n\n\n//# sourceURL=webpack://battleship/./src/person.js?");

/***/ }),

/***/ "./src/ship.js":
/*!*********************!*\
  !*** ./src/ship.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ship: () => (/* binding */ Ship)\n/* harmony export */ });\nclass Ship {\n  constructor(length) {\n    this.length = length;\n    this.hits = 0;\n    this.sunk = false;\n  }\n\n  addHit() {\n    this.hits++;\n  }\n\n  isSunk() {\n    this.sunk = true;\n  }\n}\n\n\n//# sourceURL=webpack://battleship/./src/ship.js?");

/***/ }),

/***/ "./src/shortcodes.js":
/*!***************************!*\
  !*** ./src/shortcodes.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   existsInArray: () => (/* binding */ existsInArray),\n/* harmony export */   isValidAxis: () => (/* binding */ isValidAxis),\n/* harmony export */   isValidDrop: () => (/* binding */ isValidDrop),\n/* harmony export */   isValidSquare: () => (/* binding */ isValidSquare)\n/* harmony export */ });\nfunction existsInArray(array, coords) {\n  return array.some((arrCoords) => arrCoords[0] === coords[0] && arrCoords[1] === coords[1]);\n}\n\nfunction isValidAxis(coord) {\n  return coord > -1 && coord < 10 ? true : false;\n}\n\nfunction isValidSquare(array, coords) {\n  const [x, y] = coords;\n  const exists = existsInArray(array, coords);\n  if (exists && isValidAxis(x) && isValidAxis(y)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isValidDrop(player, shipLength, coords) {\n  const isVertical = player.board.isVertical;\n  const size = isVertical ? coords[1] : coords[0];\n  const draggableSize = shipLength - 1;\n  const inGrid = (isVertical && size >= draggableSize) || (!isVertical && size + draggableSize < 10);\n  let pieceOverlap = false;\n\n  for (let i = 0; i < shipLength; i++) {\n    const isValid = isVertical ? isValidSquare(player.board.emptyCoords, [coords[0], coords[1] - i]) : isValidSquare(player.board.emptyCoords, [coords[0] + i, coords[1]]);\n    if (!isValid) {\n      pieceOverlap = true;\n      break;\n    }\n  }\n  return inGrid && !pieceOverlap ? true : false;\n}\n\n//# sourceURL=webpack://battleship/./src/shortcodes.js?");

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__("./src/index.js"));
/******/ }
]);